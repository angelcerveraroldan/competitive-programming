#include <iostream>
#include <vector>

using namespace std;

int n, m;
int from, to; 

void solution()
{
	cin >> n; 

	// Containing  1 if the nearest city is to the right
	// containing -1 if the nearest city is to the left
	int closest[n];
	int arr[n];

	for (int i = 0; i < n; i++) cin >> arr[i];	
	

	closest[0] = 1;
	closest[n-1] = -1;
	for (int i = 1; i < n - 1; i ++) {
		int left = arr[i] - arr[i - 1];
		int right = arr[i + 1] - arr[i];	
		(right > left) ? closest[i] = -1 : closest[i] = 1;
	}
	

	cin >> m; 
	
	for (int i = 0; i < m; i ++)
	{
		cin >> from >> to;
		
		// Make input 0-indexed
		from --;
		to --;

		int sum = 0;
		bool moving_right = (to > from);
		while (from != to)
		{	
			if (moving_right && closest[from] == 1) 
			{
				sum ++;
				from ++; 			
			} else if (moving_right)
			{
				sum += arr[from + 1] - arr[from];
				from ++; 
			}

			if (!moving_right && closest[from] == -1)
			{
				sum ++;
				from --;
			} else if (!moving_right)
			{
				sum += arr[from] - arr[from - 1];
				from --;
			}
		}

		cout << sum << "\n"; 
	}
}

int tests;

int main()
{	
	cin >> tests;
	for (int x = 0; x < tests; x ++) solution();	
}
